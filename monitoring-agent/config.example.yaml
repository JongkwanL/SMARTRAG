# SmartRAG Monitoring Agent Configuration

# HTTP Server Configuration
server:
  host: 0.0.0.0
  port: 8080
  metrics_port: 9090
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 120s
  enable_pprof: false
  enable_cors: true

# Monitoring Configuration
monitoring:
  enabled: true
  collection_interval: 30s
  health_check_interval: 60s
  process_monitoring: false
  temperature_monitoring: false
  
  # Optional filters
  process_filters: []
  # - "smartrag"
  # - "postgres"
  # - "redis"
  
  network_interfaces: []
  # - "eth0"
  # - "wlan0"
  
  disk_mountpoints: []
  # - "/"
  # - "/data"
  
  # Services to monitor
  services:
    - name: "smartrag-api"
      type: "http"
      endpoint: "http://localhost:8000/health"
      timeout: 10s
      interval: 60s
      expected_status: 200
      enabled: true
      
    - name: "smartrag-gateway"
      type: "http"
      endpoint: "http://localhost:8081/health"
      timeout: 10s
      interval: 60s
      expected_status: 200
      enabled: true
      
    - name: "smartrag-vector-search"
      type: "grpc"
      endpoint: "localhost:9001"
      timeout: 10s
      interval: 60s
      ssl: false
      enabled: true
      
    - name: "smartrag-streaming-proxy"
      type: "http"
      endpoint: "http://localhost:8082/health"
      timeout: 10s
      interval: 60s
      expected_status: 200
      enabled: true
      
    - name: "redis"
      type: "tcp"
      endpoint: "localhost:6379"
      timeout: 5s
      interval: 60s
      enabled: true
      
    - name: "postgres"
      type: "tcp"
      endpoint: "localhost:5432"
      timeout: 5s
      interval: 60s
      enabled: true

  # Custom metrics (optional)
  custom_metrics: []
  # - name: "custom_counter"
  #   type: "command"
  #   source: "cat /proc/loadavg | awk '{print $1}'"
  #   interval: 30s
  #   parser: "regex"
  #   pattern: "^([0-9.]+)"
  #   enabled: true

# Logging Configuration
logging:
  level: info
  format: json
  output: stdout
  # filename: "/logs/monitoring-agent.log"
  max_size_mb: 100
  max_backups: 3
  max_age_days: 30
  compress: true

# Storage Configuration
storage:
  type: memory  # memory, file, postgres
  # path: "/data/metrics.db"
  max_size_mb: 100
  metrics_retention: 24h
  alerts_retention: 7d
  health_retention: 24h
  compression_enabled: false
  backup_enabled: false
  backup_interval: 1h

# Alerting Configuration
alerts:
  enabled: false
  
  rules:
    - name: "high_cpu_usage"
      metric: "cpu_usage_percent"
      condition: "gt"
      threshold: 90.0
      duration: 5m
      severity: "critical"
      enabled: true
      description: "CPU usage is above 90%"
      
    - name: "high_memory_usage"
      metric: "memory_usage_percent"
      condition: "gt"
      threshold: 85.0
      duration: 5m
      severity: "warning"
      enabled: true
      description: "Memory usage is above 85%"
      
    - name: "disk_space_low"
      metric: "disk_usage_percent"
      condition: "gt"
      threshold: 90.0
      duration: 10m
      severity: "critical"
      enabled: true
      description: "Disk usage is above 90%"
      
    - name: "service_down"
      metric: "service_health_status"
      condition: "eq"
      threshold: 0.0
      duration: 1m
      severity: "critical"
      enabled: true
      description: "Service is unhealthy"

  # Notification channels
  webhooks: []
  # - name: "slack_webhook"
  #   url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  #   method: "POST"
  #   timeout: 10s
  #   enabled: true

  smtp:
    host: ""
    port: 587
    username: ""
    password: ""
    from: "monitoring@smartrag.local"
    to: []
    use_tls: true

  slack:
    webhook_url: ""
    channel: "#alerts"
    username: "SmartRAG Monitoring"
    icon_emoji: ":warning:"

# Security Configuration
security:
  enable_auth: false
  api_keys: []
  
  basic_auth:
    username: ""
    password: ""
  
  rate_limit:
    enabled: true
    requests_per_minute: 1000
    burst_size: 100
    cleanup_interval: 1m
  
  cors:
    enabled: true
    allowed_origins: ["*"]
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["*"]
    max_age: 3600
  
  tls:
    enabled: false
    cert_file: ""
    key_file: ""
    auto_tls: false
  
  allowed_ips: []
  blocked_ips: []