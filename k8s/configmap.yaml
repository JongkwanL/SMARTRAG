# ConfigMap for SmartRAG application configuration
# Contains non-sensitive configuration data

apiVersion: v1
kind: ConfigMap
metadata:
  name: smartrag-config
  namespace: smartrag
  labels:
    app.kubernetes.io/name: smartrag
    app.kubernetes.io/component: config
    app.kubernetes.io/version: "1.0.0"
data:
  # Application settings
  ENVIRONMENT: "production"
  DEBUG: "false"
  LOG_LEVEL: "info"
  
  # API settings
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  API_WORKERS: "4"
  ENABLE_DOCS: "false"
  ENABLE_AUTH: "true"
  ENABLE_RATE_LIMITING: "true"
  
  # Database connections
  QDRANT_HOST: "qdrant-service"
  QDRANT_PORT: "6333"
  QDRANT_COLLECTION_NAME: "smartrag_docs"
  QDRANT_DISTANCE_METRIC: "cosine"
  
  # Redis cache
  REDIS_ENABLED: "true"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  REDIS_MAX_CONNECTIONS: "20"
  REDIS_SERIALIZER: "pickle"
  REDIS_KEY_PREFIX: "smartrag:"
  
  # vLLM settings
  VLLM_BASE_URL: "http://vllm-service:8000"
  VLLM_MODEL: "microsoft/DialoGPT-medium"
  VLLM_TIMEOUT: "30.0"
  VLLM_MAX_RETRIES: "3"
  
  # Embedding settings
  EMBEDDING_MODEL: "sentence-transformers/all-MiniLM-L6-v2"
  EMBEDDING_DEVICE: "cpu"
  EMBEDDING_BATCH_SIZE: "32"
  EMBEDDING_MAX_LENGTH: "512"
  
  # Processing settings
  CHUNK_SIZE: "1000"
  CHUNK_OVERLAP: "200"
  MAX_CHUNK_SIZE: "2000"
  
  # Search settings
  SEARCH_VECTOR_WEIGHT: "0.7"
  SEARCH_BM25_WEIGHT: "0.3"
  SEARCH_MMR_LAMBDA: "0.5"
  
  # Cache settings
  CACHE_MAX_SIZE: "10000"
  CACHE_TTL: "3600"
  
  # Rate limiting
  RATE_LIMIT_PER_MINUTE: "100"
  RATE_LIMIT_PER_HOUR: "1000"
  RATE_LIMIT_BURST: "10"
  
  # Security
  JWT_ALGORITHM: "HS256"
  JWT_EXPIRATION_HOURS: "24"
  
  # CORS
  CORS_ORIGINS: '["https://smartrag.example.com","https://api.smartrag.example.com"]'
  
  # Monitoring
  LOG_REQUEST_BODY: "false"
  LOG_HEADERS: "false"
  
  # Prometheus metrics
  PROMETHEUS_ENABLED: "true"
  PROMETHEUS_PORT: "9090"

---
# ConfigMap for logging configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: smartrag-logging-config
  namespace: smartrag
  labels:
    app.kubernetes.io/name: smartrag
    app.kubernetes.io/component: logging-config
data:
  logging.yaml: |
    version: 1
    formatters:
      default:
        format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
        datefmt: '%Y-%m-%d %H:%M:%S'
      json:
        class: pythonjsonlogger.jsonlogger.JsonFormatter
        format: '%(asctime)s %(name)s %(levelname)s %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        level: INFO
        formatter: json
        stream: ext://sys.stdout
      file:
        class: logging.handlers.RotatingFileHandler
        level: DEBUG
        formatter: default
        filename: /app/logs/smartrag.log
        maxBytes: 10485760  # 10MB
        backupCount: 5
    loggers:
      src:
        level: DEBUG
        handlers: [console, file]
        propagate: false
      uvicorn:
        level: INFO
        handlers: [console]
        propagate: false
      fastapi:
        level: INFO
        handlers: [console]
        propagate: false
    root:
      level: INFO
      handlers: [console]

---
# ConfigMap for nginx configuration (if using nginx)
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: smartrag
  labels:
    app.kubernetes.io/name: smartrag
    app.kubernetes.io/component: nginx-config
data:
  nginx.conf: |
    upstream smartrag_backend {
        least_conn;
        server smartrag-api-service:8000 max_fails=3 fail_timeout=30s;
    }
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=search:10m rate=5r/s;
    
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://smartrag_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;
            
            proxy_pass http://smartrag_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
        
        # Search endpoints with stricter rate limiting
        location /api/v1/search {
            limit_req zone=search burst=10 nodelay;
            limit_req_status 429;
            
            proxy_pass http://smartrag_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static files (if any)
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }