# Secrets for SmartRAG application
# Contains sensitive configuration data

apiVersion: v1
kind: Secret
metadata:
  name: smartrag-secrets
  namespace: smartrag
  labels:
    app.kubernetes.io/name: smartrag
    app.kubernetes.io/component: secrets
    app.kubernetes.io/version: "1.0.0"
type: Opaque
stringData:
  # JWT secret key (generate with: openssl rand -base64 32)
  JWT_SECRET_KEY: "your-jwt-secret-key-change-this-in-production"
  
  # Redis password (if using authentication)
  REDIS_PASSWORD: ""
  
  # vLLM API key (if required)
  VLLM_API_KEY: ""
  
  # Database credentials (if using external database)
  DATABASE_URL: "postgresql://user:password@host:port/dbname"
  
  # External API keys
  OPENAI_API_KEY: ""
  ANTHROPIC_API_KEY: ""
  COHERE_API_KEY: ""
  
  # Monitoring credentials
  PROMETHEUS_USERNAME: "admin"
  PROMETHEUS_PASSWORD: "prometheus-password"
  
  # SSL/TLS certificates (base64 encoded)
  TLS_CERT: ""
  TLS_KEY: ""

---
# Secret for registry access (if using private registry)
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: smartrag
  labels:
    app.kubernetes.io/name: smartrag
    app.kubernetes.io/component: registry-secret
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    # Base64 encoded Docker registry credentials
    # Example: echo -n '{"auths":{"your-registry.com":{"username":"user","password":"pass","auth":"base64(user:pass)"}}}' | base64
    # Replace with actual registry credentials

---
# Secret for external service accounts
apiVersion: v1
kind: Secret
metadata:
  name: service-account-keys
  namespace: smartrag
  labels:
    app.kubernetes.io/name: smartrag
    app.kubernetes.io/component: service-account
type: Opaque
stringData:
  # Google Cloud service account (if using GCP services)
  gcp-service-account.json: |
    {
      "type": "service_account",
      "project_id": "your-project-id",
      "private_key_id": "key-id",
      "private_key": "-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY\n-----END PRIVATE KEY-----\n",
      "client_email": "service-account@your-project.iam.gserviceaccount.com",
      "client_id": "client-id",
      "auth_uri": "https://accounts.google.com/o/oauth2/auth",
      "token_uri": "https://oauth2.googleapis.com/token"
    }
  
  # AWS credentials (if using AWS services)
  aws-credentials: |
    [default]
    aws_access_key_id = YOUR_ACCESS_KEY
    aws_secret_access_key = YOUR_SECRET_KEY
    region = us-west-2
  
  # Azure credentials (if using Azure services)
  azure-credentials.json: |
    {
      "clientId": "your-client-id",
      "clientSecret": "your-client-secret",
      "subscriptionId": "your-subscription-id",
      "tenantId": "your-tenant-id"
    }